/* include unph */
/* Our own header.  Tabs are set for 4 spaces, not 8 */

#ifndef	__unp_h
#define	__unp_h

#include <stdlib.h>
#include <errno.h>
#include <stdio.h>
#include <cstring>
#include <unistd.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <signal.h>
#include <sys/wait.h>

#include "../config.h" /* configuration options for current OS */
                       /* "../config.h" is generated by configure */
/* Miscellaneous constants */
#define MAXLINE  4096 /* max text line length */
#define BUFFSIZE 8192 /* buffer size for reads and writes */
#define LISTENQ  1024 /* 2nd argument to listen() */

/* Define some port number that can be used for our examples */
#define SERV_PORT       9877              /* TCP and UDP */
#define SERV_PORT_STR   "9877"            /* TCP and UDP */
#define UNIXSTR_PATH    "/tmp/unix.str"   /* Unix domain stream */
#define UNIXDG_PATH     "/tmp/unix.dg"    /* Unix domain datagram */

typedef void Sigfunc(int);   /* for signal handlers */
Sigfunc* Signal(int signo, Sigfunc *func); /* for our signal() function */
void sig_chld(int);


void err_dump(const char *, ...);
void err_msg(const char *, ...);
void err_quit(const char *, ...);
void err_ret(const char *, ...);
void err_sys(const char *, ...);

void str_echo(int sockfd);
void str_cli(FILE *fp, int sockfd);

char* Fgets(char *ptr, int n, FILE *stream);
void Fputs(const char *ptr, FILE *stream);

ssize_t Readline(int fd, void *ptr, size_t maxlen);

void Writen(int, void *, size_t);

#endif	/* __unp_h */
